<section xmlns="http://docbook.org/ns/docbook"
         xml:id="VDG-Appendix-Disk-Drive-History-Master-Boot-Record"
         xmlns:xl="http://www.w3.org/1999/xlink"
         version="5.1">

  <title>The Master Boot Record</title>

  <para>
    The Master Boot Record (<acronym>MBR</acronym>) is located in the
    first sector of the primary disk drive. The MBR may be up to 446B
    of code, and partition tables may be up to 64B of data. When you
    add in another 2B to record a <firstterm>Boot
    Signature</firstterm> you have 512B, which up until recently
    happened to be the typical size of one sector

    <footnote
    xml:id="VDG-Appendix-Disk-Drive-History-Master-Boot-Record-seagate-4k-drives"><para>
    Seagate.com - Transition to Advanced Format 4K Sector Hard Drives:
    <link
    xl:href="http://www.seagate.com/tech-insights/advanced-format-4k-sector-hard-drives-master-ti/"/>
    </para></footnote>

    <footnote><para>Pixel Beat - Details of GRUB on the PC:
      <link xl:href="http://www.pixelbeat.org/docs/disk/"/>
    </para></footnote>

    . This first sector is referred to by a special name, the
    <systemitem>boot sector</systemitem>.
  </para>

  <table pgwide='0' frame='none'>
    <title>Master Boot Record Contents</title>
    <tgroup cols='3' align='center'>
      <colspec colname='c1'/>
      <colspec colname='c2'/>
      <colspec colname='c3'/>
      <thead>
        <row>
          <entry align='left'>Size (in bytes)</entry>
          <entry align='left'>Percent</entry>
          <entry align='left'>Purpose</entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry align='left'>440B</entry>
          <entry align='left'>86%</entry>
          <entry align='left'>Bootable Code (such as GRUB

	  <footnote><para>The Grand Unified Boot Loader (GRUB): <link
	  xl:href="http://www.gnu.org/software/grub/"/></para></footnote>/LILO
	  <footnote><para>Linux Loader (LILO): <link
	  xl:href="http://lilo.alioth.debian.org/"/></para></footnote>)</entry>
        </row>
        <row>
          <entry align='left'>004B</entry>
          <entry align='left'>0.8%</entry>
          <entry align='left'>Disk signature</entry>
        </row>
        <row>
          <entry align='left'>002B</entry>
          <entry align='left'>0.4%</entry>
          <entry align='left'>Nulls</entry>
        </row>
        <row>
          <entry align='left'>064B</entry>
          <entry align='left'>13%</entry>
          <entry align='left'>Partition Table</entry>
        </row>
        <row>
          <entry align='left'>002B</entry>
          <entry align='left'>0.4%</entry>
          <entry align='left'>MBR Signature</entry>
        </row>
      </tbody>
    </tgroup>
  </table>

  <para>
    In the old days a disk cylinder (or track) was typically 63
    sectors. This would represent one concentric ring of storage on a
    physical disk. Some people believe that early operating systems
    (notably <systemitem class="osname">MS-DOS</systemitem>) enforced
    requirements which dictated that partitions begin on cylinder
    boundaries, or that the OS needed to begin and end on a cylinder
    boundary. Jonathan de Boyne Pollard (JDBP) disputes that claim

    <footnote><para>The gen on disc partition alignment: <link
    xl:href="http://homepage.ntlworld.com/jonathan.deboynepollard/FGA/disc-partition-alignment.html"/>
    </para></footnote>

    , saying:

    <blockquote xml:id="VDG-Appendix-Disk-Drive-History-Master-Boot-Record-jdbp-alignment-quote">
      <attribution>Jonathan de Boyne Pollard</attribution>

      <para>
	It is often believed that disc partitions have to be aligned
	to cylinder or track boundaries. This is not in fact true and
	never really has been. There are alignment considerations for
	disc partitions, but they have nothing to do with cylinders,
	and they aren't mandatory. Operating systems will still work
	with misaligned partitions, just more slowly for some (not
	all) disc unit models.
      </para>

      <para>
	The idea that disc partitions have to aligned to cylinder
	boundaries is nonsense on its face. Millions of people have
	had discs where the first primary partition began on track
	zero, sector one, head one with no ill effect whatsoever on
	operating systems from MS-DOS through Windows NT to OS/2. That
	was, after all, the default that fdisk/Disk Manager on those
	operating systems used for almost two decades. At best, the
	purported alignment requirement would have been a track
	alignment, with all partitions starting at sector one (Sectors
	are numbered from one, remember.) of any given track.
      </para>

      <para>
	But this is not true, either. No version of any operating
	system has actually required this. Even MS-DOS was quite happy
	to have disc partitions starting at sectors other than 1. The
	only things that have required this have been disc
	partitioning utilities. There's been a bit of circular logic
	about this. The disc partitioning utilities enforced the
	requirement because their authors thought that it was a
	requirement, but people only thought that it was a requirement
	because fdisk and the like enforced it. It was what the
	partitioning utility programs enforced — so the logic went —
	so it must have been a restriction. In fact it never was, and
	no operating system itself has any trouble with this.
      </para>
    </blockquote>
  </para>

  <para>
    What we can take away from JDBP here is this: Operating systems,
    not even <systemitem class="osname">MS-DOS</systemitem>, require
    partition's to begin (or end) on cylinder or track boundaries.
  </para>

  <para>
    The very idea that partitions have such restrictions is a complete
    falsehood. A story passed down from hacker generation to
    generation, accepted as canon and never questioned.
  </para>

  <para>
    JDBP goes on to also discuss the 4KiB alignment rule:
  </para>


  <blockquote xml:id="VDG-Appendix-Disk-Drive-History-Master-Boot-Record-jdbp-alignment-quote2">
    <para>
      There is a disc partition alignment rule that
      <emphasis>does</emphasis> reflect the actual hardware. It is the
      rule that partitions be aligned to 4KiB boundaries. This rule
      only makes sense for <emphasis>some</emphasis> hard disc models,
      however.
    </para>

    <para>
      In some hard disc models, the internal sector size has been
      increased from 0.5KiB to 4KiB. At the I/O command level, as
      system softwares access the disc, the sector size is still
      0.5KiB, however. Such discs are known as <quote>512 byte
      emulation</quote> discs [&#x2026;]
    </para>

    <para>
      What happens on such <quote>512e</quote> discs is that whenever
      the operating system or the firmware reads a 0.5KiB sector, the
      disc unit itself is actually reading a whole 4KiB and handing
      the firmware/operating system the appropriate one-eighth; and
      whenever the firmware/operating system writes a 0.5KiB sector,
      the disc unit is actually reading a whole 4KiB sector, modifying
      one eighth, and writing the whole 4KiB back again.
    </para>

    <para>
      [&#x2026;]
    </para>

    <para>
      So it's simply necessary to ensure that those eight 0.5KiB
      sectors are contiguous and aligned to an actual 4KiB sector on
      the disc. The <quote>natural</quote> I/O boundaries used by the
      operating system must align with the internal, hidden, 4KiB
      boundaries of the physical disc. The eight 0.5KiB sectors in the
      I/O command must not span two or more 4KiB physical sectors; but
      must be exactly one 4KiB sector, and in the right order within
      that sector.
    </para>
  </blockquote>

  <para>
    What we should first observe from this second quote is that there
    <emphasis>is</emphasis> a rule regarding sector alignment. But
    that rule has nothing to do with operating system
    requirements. Furthermore, this is only a rule and we are not
    obligated to follow it. Failure to follow the rule simply results
    in degraded I/O performance.
  </para>

  <para>
    I recommend reading the entire page for a complete overview of
    these topics. JDBP does an excellent job separating the fact from
    fiction and explains how you can achieve correct 4KiB alignment,
    or realignment if you need to fix an existing system.
  </para>

  <note>
    <para>For more information on the <quote>native</quote> 4KiB disk
    drive topic I recommend reviewing footnote <footnoteref
    linkend="VDG-Appendix-Disk-Drive-History-Master-Boot-Record-seagate-4k-drives"
    />.</para>
  </note>
</section>
