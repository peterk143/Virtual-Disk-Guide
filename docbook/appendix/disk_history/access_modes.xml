<section xmlns="http://docbook.org/ns/docbook"
         xml:id="VDG-Appendix-Disk-Drive-History-Access-Modes"
         xmlns:xl="http://www.w3.org/1999/xlink"
         version="5.1">

  <title>Access Modes</title>

  <para>
    Addressing data blocks can be done in multiple ways. The older
    ways (CHS, ECHS) operate in terms of physical disk properties
    (geometry). The second system for addressing blocks (LBA) has been
    an option in almost every disk drive since 1996

    <footnote><para>Wikipedia.org - Logical Block Addressing: <link
    xl:href="http://en.wikipedia.org/wiki/Logical_block_addressing#Enhanced_BIOS"/>
    </para></footnote>.
  </para>

  <note>
    <para>
      Later we'll see the problems caused by the radically different
      and conflicting way the ATA/<systemitem class="event">Int
      13h</systemitem> standards are defined.
    </para>
  </note>

  <section xml:id="VDG-Appendix-Disk-Drive-History-Access-Modes-CHS">
    <title>CHS Addressing</title>

    <para>
      In the beginning data on disk drives was addressed by describing
      the physical geometry of the disk using a combination of its
      distance from the center of the disk
      (<firstterm>track</firstterm>), its rotation around the disk
      (<firstterm>sector</firstterm>), and the read-write head which
      accesses its side of the platter. This addressing system is
      called <firstterm>Cylinder-Head-Sector</firstterm>
      (<acronym>CHS</acronym>)

      <footnote><para>
        PC Guide - Cylinder-Head-Sector: <link xl:href="http://www.pcguide.com/ref/hdd/geom/geom.htm"/>
      </para></footnote>

      . This method of access was provided via a BIOS service commonly
      referred to as <systemitem class="event">Int
      13h</systemitem>. While this system was quite straightforward,
      it provided no abstraction between the physical location of data
      and the act of requesting data from the drive. To read/write
      data you simply called <systemitem class="event">Int
      13h</systemitem> and specified the physical cylinder, head, and
      sector on the disk drive of what you were requesting. It began
      breaking down when drive capacities exceeded what the standards
      at the time were capable of describing. You can think of this
      like running out of telephone numbers.
    </para>

    <para>
      One way this was addressed was through the <firstterm>Int 13h
      Extensions</firstterm>. The original <systemitem
      class="event">Int 13h</systemitem> system used 24 bits for
      addressing data, the extensions bumped that number up to 64
      bits. To put that into perspective, the maximum addressable
      range of data went from 8.46 GB up to 9,400,000,000,000 GB

      <footnote>
        <para>
          PC Guide: <systemitem class="event">Int 13h</systemitem>
          Extensions <link
          xl:href="http://www.pcguide.com/ref/hdd/bios/bios_Extensions.htm"/>
        </para>
      </footnote>

      .
    </para>

    <para>
      At the same time this was happening, technology was advancing to
      the point where it was becoming logically impossible to
      represent the physical drive geometry to the BIOS in a way
      compatible with the ATA/<systemitem class="event">Int
      13h</systemitem> systems

      <footnote>
        <para>
	  Zoned Bit Recording (PC Guide: <link
	  xl:href="http://www.pcguide.com/ref/hdd/geom/tracks_ZBR.htm"/>)
	  is an example of something logically impossible to represent
	  with <systemitem class="event">Int 13h</systemitem>
	</para>
      </footnote>

      . To work around this, disk drives began reporting their
      <firstterm>Logical Geometry</firstterm> to the BIOS. In this way
      only the disk drive knows it's actual physical
      (<acronym>CHS</acronym>) geometry. Access requests from the BIOS
      are <firstterm>translated</firstterm> internally on the hard
      disk controller into actual physical disk geometry. A disk's
      logical geometry will have a number of sectors approximately
      equal to, but never more than, the physical number of sectors on
      the disk. The reported logical geometry fits within the limits
      of the ATA standard, but not necessarily (most often not) within
      the limits of the <systemitem class="event">Int 13h</systemitem>
      standard.
    </para>
  </section>

  <section xml:id="VDG-Appendix-Disk-Drive-History-Access-Modes-LBA">
    <title>LBA Addressing</title>

    <para>
      Up to this point we've been discussing addressing modes based on
      the properties of the physical disk drive. Now the discussion
      will transition to the modern <firstterm>Logical Block
      Addressing</firstterm>.
    </para>


    <para>
      Another important thing that happened was the introduction of
      geometry translation at the BIOS level. This is an addressing mode
      which the BIOS will enable that translates the logical drive
      geometry

      <footnote>
        <para>Recall: this <quote>logical geometry</quote> has already
        been translated once to fit ATA standards for the BIOS by the
        disk controller</para>
      </footnote>

      into CHS tuples compatible with the <systemitem
      class="event">Int 13h</systemitem> system. This addressing mode
      is often called <firstterm>Extended CHS</firstterm>, or
      <firstterm>Large mode</firstterm>

      <footnote>
	<para>
	  PC Guide: Extended CHS/Large Mode: <link
	  xl:href="http://www.pcguide.com/ref/hdd/bios/modesECHS-c.html"/>
	</para>
      </footnote>

      .
    </para>

    <para>
      In LBA mode there is an abstraction between the operating system
      and the devices where the data is stored. Using LBA the operating
      system accesses data by unique identifiers. Each block is
      addressed by a simple identifier which increases
      sequentially. This system requires that all involved components
      are LBA aware: the disk drive controller, the BIOS, and the
      operating system.
    </para>

    <para>
      Eventually disk drive capacities exceeded the maximum
      addressable range defined in original ATA-1 standard. In 2002
      the <orgname>T13</orgname> group released the ATA-6 standard

      <footnote>
	<para>
	  <citetitle>INCITS 361-2002 (1410D): AT Attachment - 6 with
	  Packet Interface (ATA/ATAPI - 6)</citetitle>:
          <link
            xl:href="http://www.t13.org/documents/UploadedDocuments/project/d1410r3b-ATA-ATAPI-6.pdf"/>
	</para>
      </footnote>

      which introduced 48b addressing. This increased the maximum
      addressable capacity to 128PiB.
    </para>
  </section>
</section>
