<section xml:id="VDG-Cookbook-Resize-Image"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xl="http://www.w3.org/1999/xlink"
         version="5.0">

  <title>Resizing Disk Images</title>

  <para>
    In this section we'll resize two different virtual disk
    images. The first will be a RAW image, the other will be a QCOW2
    image. The RAW section is more involved in that we'll do all of
    the resizing operations <emphasis>outside</emphasis> of a virtual
    machine. In the QCOW2 section I'll show the (simpler) steps which
    take place both outside and inside of a virtual machine.
  </para>

  <section xml:id="VDG-Cookbook-Resize-Image-RAW">
    <title>Resizing RAW Images</title>

    <para>
      In this part we'll add 2GiB to a disk image I created of a 1GiB
      USB thumb drive <footnote><para>See <xref
      linkend="VDG-Cookbook-Cloning-A-Physical-Disk"/> for
      instructions on how to do this yourself.</para></footnote> The
      thumb drive has two roughly equal sized partitions, both are
      <systemitem class="filesystem">EXT4</systemitem>.
    </para>

    <para>
      At the end of this section we'll have done the following:
    </para>

    <itemizedlist>
      <listitem>
        <para>
          Enlarged the disk by 2GiB with <command>qemu-img</command>
        </para>
      </listitem>

      <listitem>
        <para>
          Shifted the the second partition 1024MiB right into the new
          space with <command>gparted</command>
        </para>
      </listitem>

      <listitem>
        <para>
          Enlarged the first partition by about 1GiB with <command>gparted</command>
        </para>
      </listitem>

      <listitem>
        <para>
          Resized the first filesystem to use the new space on its
          partition with <command>resize2fs</command>
        </para>
      </listitem>
    </itemizedlist>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image01">
      <title>
        Resize a <filename class="extension">RAW</filename> Image
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-disk-image01" parse="text"/></screen>
    </example>

    <para>
      Next we need to create device maps and devices linking to the
      enlarged disk image so we may interact with it. We will use the
      <command>kpartx</command> command

      <footnote><para>For more information on the
      <command>kpartx</command> command, see <xref
      linkend="VDG-Helpers" /></para></footnote>

      to automatically create loop devices

      <footnote><para>Don't confuse the often misused term
      <firstterm>loopback device</firstterm> with a <firstterm>loop
      device.</firstterm> In networking a loopback device refers to a
      virtual interface used for routing within a host. <systemitem
      class="domainname">localhost</systemitem> is the standard
      hostname given to the loopback address <systemitem
      class="ipaddress">127.0.0.1</systemitem>. See rfc1700
      <citetitle>Assigned Numbers</citetitle> for additional
      information (<link
      xl:href="http://tools.ietf.org/html/rfc1700"/>).</para></footnote>

      <footnote><para>We'll revisit loop devices in <xref
      linkend="VDG-Concepts" /></para></footnote>

      and device maps to the partitions. The <option>-a</option>
      option means we're adding partition mappings and the
      <option>-v</option> option means to do it with increased
      verbosity so we know the names of the created devices.
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image02">
      <title>
        Create devices with <command>kpartx</command>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-disk-image02" parse="text"/></screen>
    </example>

    <para>
      Now we're going to use <command>gparted</command> to resize the
      partitions in the disk image. There are two important things to
      keep in mind:
    </para>

    <orderedlist>
      <listitem>
        <para>
          <command>gparted</command> expects to find the <filename
          class="partition">loop0p*</filename> devices in <filename
          class="directory">/dev/</filename>, not in <filename
          class="directory">/dev/mapper/</filename>
        </para>
      </listitem>
      <listitem>
        <para>
          <command>gparted</command> won't list loop devices in its
          device selection menu
        </para>
      </listitem>
    </orderedlist>

    <para>
      When we ran <command>kpartx</command> it created symbolic links
      to the new devices (<filename
      class="devicefile">/dev/dm-*</filename>) which map to the
      partitions on <filename
      class="devicefile">/dev/loop0</filename>. We can use this
      information to create the symlinks necessary for
      <command>gparted</command> to locate <filename
      class="partition">loop0p*</filename>.
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image03">
      <title>Create the symbolic links</title>
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image03" parse="text"/></screen>
    </example>

    <para>
      Once the symlinks are created we can run
      <command>gparted</command> from the command line with <filename
      class="devicefile">/dev/loop0</filename> as the device argument.
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image04">
      <title>Run <command>gparted</command></title>
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image04" parse="text"/></screen>
    </example>

    <para>
      Now <command>gparted</command> should open and show the two
      existing partitions, as well as the 2GiB of unallocated space we
      just added to the image:
    </para>

    <!-- #################### BEGIN GPARTED SCREENSHOTS #################### -->

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize01.png">
      <title>Welcome to <command>gparted</command></title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata fileref="./images/resize/resize01.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="360pt" fileref="../../images/resize/resize01.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      Right click the second partition, <filename
      class="partition">loop0p2</filename>, and select the
      <emphasis>Resize/Move</emphasis> option:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize02">
      <title>
        Resize/Move <filename class="partition">loop0p2</filename>
      </title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata contentwidth="435pt" fileref="./images/resize/resize02.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="360pt" fileref="../../images/resize/resize02.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      We're not going to resize the second partition. We just want to
      make room for the first partition to expand into. Enter
      <literal>1024</literal> into the <emphasis>Free space preceding
      (MiB)</emphasis> box. That will move this partition to the right
      far enough to leave the first partition enough room to expand to
      1024 MiB. Also, in the <emphasis>Align to</emphasis> drop-down
      menu select <emphasis>Cylinder</emphasis>

      <footnote>
        <para>
          On aligning Partitions: <xref
          linkend="VDG-Appendix-Disk-Drive-History-Master-Boot-Record"/>
        </para>
      </footnote>

      :
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize03">
      <title>Moving <filename class="partition">loop0p2</filename></title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata contentwidth="435pt" fileref="./images/resize/resize03.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="360pt" fileref="../../images/resize/resize03.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      <command>gparted</command> will now show 1 operation
      pending:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize04">
      <title>Pending move operation</title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata contentwidth="435pt" fileref="./images/resize/resize04.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="360pt" fileref="../../images/resize/resize04.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      Now right click the first partition and select
      <emphasis>Resize/Move</emphasis> like we did with the second
      partition. We'll make the first partition use the free space
      preceding the second partition by setting the <emphasis>Free space
      following (MiB)</emphasis> input box to
      <literal>0</literal>. Again, in the <emphasis>Align to</emphasis>
      drop-down menu select <emphasis>Cylinder</emphasis>:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize05">
      <title>Resize <filename class="partition">loop0p1</filename></title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata contentwidth="435pt" fileref="./images/resize/resize05.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="360pt" fileref="../../images/resize/resize05.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      There is a summary of the two pending actions below the partition
      table. Click the green check mark button to apply the changes:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize06">
      <title>Apply the changes</title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata contentwidth="435pt" fileref="./images/resize/resize06.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="360pt" fileref="../../images/resize/resize06.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      After you click apply you'll get this confirmation dialog:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize07">
      <title>Scary warning!</title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata contentwidth="435pt" fileref="./images/resize/resize07.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="360pt" fileref="../../images/resize/resize07.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      Once you click apply again this window will show the progress:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize08">
      <title>Progress happening</title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata contentwidth="435pt" fileref="./images/resize/resize08.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="360pt" fileref="../../images/resize/resize08.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      You should see this screen if there were no errors:
    </para>

    <remark>TODO: What if there ARE errors?</remark>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize09">
      <title>No errors!</title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata contentwidth="315pt" fileref="./images/resize/resize09.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="260.69pt" fileref="../../images/resize/resize09.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      All done! Click <emphasis>Close</emphasis> to return to the main
      <command>gparted</command> screen:
    </para>

    <figure xml:id="VDG-Cookbook-Resize-Image-figure-resize10">
      <title><command>gparted</command> has resized our partitions</title>
      <mediaobject>
        <imageobject audience="html">
          <imagedata contentwidth="435pt" fileref="./images/resize/resize10.png" />
        </imageobject>
        <imageobject audience="pdf">
          <imagedata contentwidth="360pt" fileref="../../images/resize/resize10.png" />
        </imageobject>
      </mediaobject>
    </figure>

    <!-- #################### END GPARTED SCREENSHOTS #################### -->

    <para>
      But wait, what's this on the last screen here?
      <command>gparted</command> says <filename
      class="partition">loop0p1</filename> is using 1.02GiB of
      1.47GiB. That can't be right. Before resizing the partition
      <command>gparted</command> said <filename
      class="partition">loop0p1</filename> was only using 25.54MiB out
      of 482.56MiB. Let's take a look at it on the command line:
    </para>


    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image05">
      <title>Compare <command>gparted</command> and <command>df</command> output</title>
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image05" parse="text"/></screen>
    </example>


    <para>
      All of that is incorrect too, as if nothing we did in
      <command>gparted</command> had an effect. What's going on here?
    </para>

    <para>
      After the partitions were resized the partition table was
      updated with the new information but we never updated the device
      maps in the kernel. The <command>kpartx</command> command also
      accepts a <option>-u</option> option to
      <emphasis>update</emphasis> partitions mappings. Let's try that
      and see if it fixes our problem:
    </para>


    <remark>This step may not be actually necessary</remark>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image06">
      <title>
        Create device maps with <command>kpartx</command>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-disk-image06" parse="text"/></screen>
    </example>


    <remark>TODO: Need a table here for comparison? (commented example in source)</remark>

    <!-- # 3082432 = sectors, 2048 = offset -->


    <!-- Compare to before: -->

    <!-- [root@deepfryer ~]# kpartx -av /dev/loop0 -->
    <!-- add map loop0p1 (253:8): 0 988282 linear /dev/loop0 2048 -->
    <!-- add map loop0p2 (253:9): 0 986329 linear /dev/loop0 991232 -->


    <!-- # Put the above information into a table ^^ -->
    <!-- # -->
    <!-- #             | Original | After Update | -->
    <!-- # device      |          |              | -->
    <!-- # major:minor |          |              | -->
    <!-- # size        |          |              | -->
    <!-- # offset      |          |              | -->


    <para>
      The partition sizes and offsets reflect the changes we made, but
      mounting the first partition still doesn't show the added
      capacity:
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image07">
      <title>Still missing added capacity</title>
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image07" parse="text"/></screen>
    </example>

    <para>
      We've already resized the partition, but we haven't resized the
      <emphasis>filesystem</emphasis> on the partition. That's the last
      thing we have to do to finish this whole resizing operation. We'll
      use the <command>resize2fs</command> command and let it
      automatically resize the filesystem to fill the available space on
      the <filename class="partition">/dev/loop0p1</filename> partition.
    </para>


    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image08">
      <title>
        Resize the filesystem with <command>resize2fs</command>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-disk-image08" parse="text"/></screen>
    </example>

    <para>
      Don't forget to clean up those lingering symlinks we made earlier:
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-a-disk-image09">
      <title>Cleanup lingering symlinks</title>
      <screen><xi:include href="../examples/cookbook-resize-a-disk-image09" parse="text"/></screen>
    </example>

    <note>
      <para>
        The <command>resize2fs</command> command can also shrink
        partitions, print the minimum possible size, and a couple other
        things. Check <command>man 8 resize2fs</command> for more
        information.
      </para>
    </note>
  </section>

  <section xml:id="VDG-Cookbook-Resize-Image-QCOW2">
    <title>Resizing QCOW2 Images</title>

    <para>
      In this section we'll resize a QCOW2 image, making it 5GB
      larger. This process will differ from the RAW image resizing
      section in that we'll do some operations outside of the virtual
      machine and some operations inside of the virtual machine.
    </para>

    <remark>TODO: Link to VDG-Cookbook-Resize-Image-RAW</remark>

    <para>
      The virtual machine we'll be working with is called
      <literal>f18</literal>, which is running <systemitem
      class="osname">Fedora Linux</systemitem> and has no LVM managed
      partitions. The disk image for this virtual machine is located
      at <filename
      class="devicefile">/var/lib/libvirt/images/f18.qcow2</filename>,
      and the root partition is <filename
      class="partition">vda3</filename>.
    </para>

    <para>
      Outside of the virtual machine the disk looks like this:
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image01">
      <title>Examine <filename class="devicefile">f18.qcow2</filename> on the host</title>
      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image01" parse="text"/></screen>
    </example>

    <para>
      Inside of the virtual machine the disk and root partition look
      like this:
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image03">
      <title>Examine <filename class="devicefile">vda</filename> in the guest</title>
      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image03" parse="text"/></screen>
    </example>

    <warning>
      <para>
        Before we begin: make sure you shutdown any virtual machines
        the disk might be attached to! For example:
        <computeroutput>virsh shutdown f18</computeroutput>
      </para>
    </warning>

    <remark>TODO: Link to section which handles resizing LVM managed partitions</remark>

    <para>
      Once the virtual machine is shutdown the process for resizing
      QCOW2 images starts similar to the process for resizing RAW
      images. Use the <command>qemu-img</command>
      <command>resize</command> sub-command, specify the disk to
      operate on (<filename>f18.qcow2</filename>), and how much to
      increase the size by (<literal>+5G</literal>):
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image02">
      <title>
        Resize a <filename class="extension">QCOW2</filename> Image
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image02" parse="text"/></screen>
    </example>

    <para>
      Once you've resized the disk image you can turn the virtual
      machine back on, for example: <computeroutput>virsh start
      f18</computeroutput>
    </para>

    <important>
      <para>
	The following steps happen <emphasis>inside</emphasis> of the
	running virtual machine.
      </para>
    </important>

    <para>
      Once the machine is back online we can resize the partition with
      the <command>fdisk</command> command. Technical note here: when
      we <quote>resize</quote> the partition with
      <command>fdisk</command> what we're
      <emphasis>actually</emphasis> doing is deleting the partition
      and then re-creating it starting at the same position

      <footnote>
	<para>
	  While performing research for this section, I found some
	  examples where the <command>parted</command>
	  <command>resize</command> sub-command was used. As of
	  <command>parted</command> version 2.4 the
	  <command>resize</command> subcommand no longer exists.
	</para>
      </footnote>
      .
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image04">
      <title>
	Resize <filename class="devicefile">/dev/vda</filename> with
	<command>parted</command>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image04" parse="text"/></screen>
    </example>

    <note>
      <para>
	In the above example we use the defaults for some of the new
	partition creation prompts. The defaults work out to selecting
	the first and last available cylinders, respectively.
      </para>
    </note>

    <para>
      Restart the virtual machine again. Now we can see the partition
      size has increased from 7.6G to 13.6GB:
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image05">
      <title>New capacity now detected</title>
      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image05" parse="text"/></screen>
    </example>

    <para>
      Just like when we resized the filesystem on the RAW disk image
      we'll use the <command>resize2fs</command> command inside the
      QCOW2 image. The root partition, <filename
      class="partition">/dev/vda3</filename>, is the last partition on the
      disk and is followed by free space which we'll grow it into:
    </para>

    <example xml:id="VDG-Cookbook-Example-Resize-Image-cookbook-resize-qcow2-image06">
      <title>
	Grow the filesystem on <filename class="partition">/dev/vda3</filename>
      </title>

      <screen><xi:include href="../examples/cookbook-resize-a-qcow2-image06" parse="text"/></screen>
    </example>
  </section>
</section>
